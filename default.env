# Default environment variables for testing
# Copy this to .env and modify as needed for your environment

# Shared host configuration
AMI_HOST=127.0.0.1

# Dgraph Configuration
DGRAPH_HOST=${AMI_HOST}
DGRAPH_PORT=9080
DGRAPH_DB=default
DGRAPH_ALPHA=${AMI_HOST}:9080
DGRAPH_ZERO=${AMI_HOST}:5080
DGRAPH_TLS=false
DGRAPH_AUTH_TOKEN=
DGRAPH_NAMESPACE=0

# MongoDB Configuration
MONGO_HOST=${AMI_HOST}
MONGO_PORT=27017
MONGO_DB=ami_orchestrator
MONGO_USER=admin
MONGO_PASSWORD=password
MONGO_AUTH_SOURCE=admin
MONGO_READ_PREF=primaryPreferred
MONGO_POOL_SIZE=100

# PostgreSQL Configuration
POSTGRES_HOST=${AMI_HOST}
POSTGRES_PORT=5432
POSTGRES_DB=postgres
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres
POSTGRES_SSL=prefer
POSTGRES_POOL_SIZE=20
POSTGRES_MAX_OVERFLOW=40
POSTGRES_ECHO=false

# PGVector Configuration (uses same PostgreSQL instance)
PGVECTOR_HOST=${AMI_HOST}
PGVECTOR_PORT=5432
PGVECTOR_DB=postgres
PGVECTOR_USER=postgres
PGVECTOR_PASSWORD=postgres
PGVECTOR_DIMS=1536
PGVECTOR_INDEX=ivfflat
PGVECTOR_LISTS=100
PGVECTOR_PROBES=10

# Redis Configuration
REDIS_HOST=${AMI_HOST}
REDIS_PORT=6379
REDIS_DB=0
REDIS_PASSWORD=
REDIS_MAX_CONN=100
REDIS_TTL=3600

# Prometheus Configuration
PROMETHEUS_HOST=${AMI_HOST}
PROMETHEUS_PORT=9090
PROMETHEUS_PUSHGATEWAY=${AMI_HOST}:9091
PROMETHEUS_JOB=ami_orchestrator
PROMETHEUS_RETENTION=30
PROMETHEUS_SCRAPE=15s

# File Storage Configuration
FILE_BACKEND=local
FILE_BASE_PATH=./data/files

# S3 Configuration (if using S3 backend)
S3_BUCKET=ami-orchestrator
S3_REGION=us-east-1
S3_ACCESS_KEY=
S3_SECRET_KEY=
S3_ENDPOINT=

# OpenBao (Vault-compatible) configuration
OPENBAO_HOST=${AMI_HOST}
OPENBAO_PORT=8200
OPENBAO_SCHEME=http
OPENBAO_TOKEN=openbao-root
OPENBAO_MOUNT_PATH=v1/secrets
OPENBAO_NAMESPACE=
OPENBAO_VERIFY_TLS=false
OPENBAO_TIMEOUT=30
OPENBAO_RETRIES=3
OPENBAO_AUTH_METHOD=token
OPENBAO_APPROLE_ID=
OPENBAO_APPROLE_SECRET=
OPENBAO_JWT=
OPENBAO_K8S_ROLE=
OPENBAO_K8S_TOKEN_PATH=/var/run/secrets/kubernetes.io/serviceaccount/token

# Secrets Broker Configuration
SECRETS_BROKER_URL=
SECRETS_BROKER_HOST=0.0.0.0
SECRETS_BROKER_PORT=8700
SECRETS_BROKER_INTERNAL_TOKEN=
SECRETS_BROKER_TOKEN=${SECRETS_BROKER_INTERNAL_TOKEN}
SECRETS_BROKER_MASTER_KEY=dev-master-key
SECRETS_BROKER_INTEGRITY_SALT=dev-integrity-salt
SECRETS_BROKER_METADATA_INDEX=0
SECRETS_BROKER_OPENBAO_ADDR=${OPENBAO_SCHEME}://${OPENBAO_HOST}:${OPENBAO_PORT}
SECRETS_BROKER_OPENBAO_TOKEN=${OPENBAO_TOKEN}
SECRETS_BROKER_OPENBAO_MOUNT=secret
SECRETS_BROKER_OPENBAO_NAMESPACE=${OPENBAO_NAMESPACE}

# Authentication Gateway Configuration
DATAOPS_AUTH_URL=
NEXT_PUBLIC_DATAOPS_AUTH_URL=${DATAOPS_AUTH_URL}
DATAOPS_INTERNAL_TOKEN=

# Elasticsearch Configuration
ELASTIC_HOST=${AMI_HOST}
ELASTIC_PORT=9200
ELASTIC_USER=elastic
ELASTIC_PASSWORD=elastic
ELASTIC_INDEX_PREFIX=ami_

# Kafka Configuration
KAFKA_BOOTSTRAP_SERVERS=${AMI_HOST}:9092
KAFKA_SECURITY_PROTOCOL=PLAINTEXT
KAFKA_SASL_MECHANISM=
KAFKA_SASL_USERNAME=
KAFKA_SASL_PASSWORD=

# MinIO Configuration (S3-compatible object storage)
MINIO_ENDPOINT=${AMI_HOST}:9000
MINIO_ACCESS_KEY=minioadmin
MINIO_SECRET_KEY=minioadmin
MINIO_USE_SSL=false

# Neo4j Configuration (alternative graph database)
NEO4J_URI=bolt://${AMI_HOST}:7687
NEO4J_USER=neo4j
NEO4J_PASSWORD=neo4j

# InfluxDB Configuration (alternative time-series database)
INFLUX_HOST=${AMI_HOST}
INFLUX_PORT=8086
INFLUX_ORG=ami-orchestrator
INFLUX_BUCKET=metrics
INFLUX_TOKEN=

# Embedding Service Configuration
EMBEDDING_SERVICE=openai
OPENAI_API_KEY=
OPENAI_MODEL=text-embedding-ada-002
EMBEDDING_BATCH_SIZE=100

# SSH Configuration for MCP SSH Server
SSH_DEFAULT_HOST=${AMI_HOST}
SSH_DEFAULT_PORT=22
AMI_SSH_USER=
AMI_SSH_PASSWORD=
SSH_DEFAULT_USER=${AMI_SSH_USER}
SSH_DEFAULT_PASSWORD=${AMI_SSH_PASSWORD}
SSH_KEY_PATH=~/.ssh/id_rsa

# Browser Configuration
CHROME_PATH=
CHROME_USER_DATA_DIR=./data/chrome_profiles
CHROME_HEADLESS=false
CHROME_DEVTOOLS=false

# DataOps MCP Server Configuration
DATAOPS_DEFAULT_STORAGE=postgres
DATAOPS_AUTO_MIGRATE=true
DATAOPS_SCHEMA_STRICT=false

# General Application Configuration
APP_ENV=development
APP_DEBUG=true
APP_LOG_LEVEL=INFO
APP_SECRET_KEY=dev-secret-key-change-in-production

# Worker Pool Configuration
WORKER_POOL_SIZE=10
WORKER_MAX_TASKS=1000
WORKER_TASK_TIMEOUT=300

# API Configuration
API_HOST=0.0.0.0
API_PORT=8000
API_CORS_ORIGINS=http://${AMI_HOST}:3000,http://${AMI_HOST}:8080
API_RATE_LIMIT=100
API_RATE_LIMIT_PERIOD=60

# Testing Configuration
TEST_MODE=true
TEST_CLEANUP=true
TEST_PARALLEL=false
TEST_TIMEOUT=600
