repos:
  # Quality checks FIRST - must run before any file modifications
  - repo: local
    hooks:
      - id: validate-serial
        name: validate-serial
        entry: bash -c "cd .. && ./scripts/ami-run.sh base/scripts/quality/serial_hooks.py --module browser"
        language: system
        pass_filenames: false
        stages: [ pre-commit ]
        require_serial: true
      - id: no-unstaged-changes
        name: no-unstaged-changes
        entry: 'bash -c "if [ -d \".git/modules\" ] && git submodule status | grep -q \"^\+\"; then echo \"BLOCKED: You are in ROOT with dirty submodules. Commit inside submodules first!\"; exit 1; fi; git diff --exit-code || { echo \"BLOCKED: Unstaged changes detected. Run git add -A before commit.\"; exit 1; }"'
        language: system
        pass_filenames: false
        stages: [ pre-commit ]
        require_serial: true

  # Ruff - replaces black, isort, pylint, and bandit
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.1.9
    hooks:
      # Formatting (replaces black) - run BEFORE linting
      - id: ruff-format
        require_serial: true
        args: [ --config, ../base/ruff.toml, . ]
        pass_filenames: false
        stages: [ pre-commit ]
      # Linting (includes security checks) - run AFTER formatting
      - id: ruff
        require_serial: true
        args: [ --config, ../base/ruff.toml, --fix, --exit-non-zero-on-fix, . ]
        pass_filenames: false
        stages: [ pre-commit ]

  # Additional quality checks
  - repo: local
    hooks:
      - id: banned-words
        name: banned-words
        entry: bash -c "cd .. && ./scripts/ami-run.sh base/scripts/quality/banned_words.py browser"
        language: system
        pass_filenames: false
        stages: [ pre-commit ]
        require_serial: true
      - id: no-lint-suppressions
        name: no-lint-suppressions
        entry: bash -c "cd .. && ./scripts/ami-run.sh base/scripts/quality/code_check.py browser"
        language: system
        pass_filenames: false
        stages: [ pre-commit ]
        require_serial: true

  # Type checking
  - repo: local
    hooks:
      - id: mypy
        name: mypy
        entry: 'bash -c "cd .. && browser/.venv/bin/python -m mypy -p browser --config-file=base/mypy.ini"'
        language: system
        types: [ python ]
        require_serial: true
        stages: [ pre-commit ]
        pass_filenames: false

  # Run tests on pre-push only (not commit)
  - repo: local
    hooks:
      - id: pytest
        name: pytest
        entry: bash -c "if [ -f scripts/run_tests.py ]; then .venv/bin/python scripts/run_tests.py; else ./.venv/bin/python -m pytest -q; fi"
        language: system
        pass_filenames: false
        always_run: true
        stages: [ pre-push ]
        require_serial: true

  # Additional useful hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: check-yaml
        require_serial: true
        stages: [ pre-commit ]
      - id: check-added-large-files
        require_serial: true
        args: ['--maxkb=100000']  # 100MB limit
        stages: [ pre-commit ]
      - id: check-merge-conflict
        require_serial: true
        stages: [ pre-commit ]
      - id: debug-statements
        require_serial: true
        stages: [ pre-commit ]
